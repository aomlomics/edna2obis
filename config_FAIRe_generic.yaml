# edna2obis Configuration File
# This is an example of a config file for a GENERIC FAIRe dataset
# USERS: Please edit the config.yaml file, not this one. This is just a template.
# Here, you specify where all of your data is, set a few other parameters, and set parameters related to the taxonomic assignment.

# STEP 1
metadata_format: "GENERIC"  # "NOAA" or "GENERIC". NOAA format has separate analysisMetadata sheets. GENERIC format has analysis data within projectMetadata.
edna2obis_run_name: "Whale_Prey_Taxa_Testing_20251015" # This name will be used to name your config file (outputted for your convenience after your run is complete)
# This name will also be used to name your HTML report and Taxa assignment INFO files.


# STEP 2
# Assign sheets from your FAIRe Excel metadata file
# NOTE: Left side is what edna2obis calls that data. Right side must be the actual sheetname from your FAIRe Excel metadata file:
sampleMetadata: "sampleMetadata" # Sheet name for sample metadata
experimentRunMetadata: "experimentRunMetadata" # Sheet name for experiment run metadata
projectMetadata: "projectMetadata" # Sheet name for project metadata

excel_file: "raw-v3/FAIRe_generic_example_dataset/noaa-aoml-gomecc4.xlsx"

# STEP 3
# Assign pathnames for your raw data. Each analysis must have 2 raw data files associated with it.
datafiles:
  gomecc4_18s_analysis1:
    assay_name: "ssu18sv9-emp"
    taxonomy_file: "raw-v3/FAIRe_generic_example_dataset/taxaRaw_noaa-aoml-gomecc4_ssu18sv9-emp.xlsx"
    abundance_file: "raw-v3/FAIRe_generic_example_dataset/otuRaw_noaa-aoml-gomecc4_ssu18sv9-emp_20220718_18S-Amplicon_PE250.csv"
  gomecc4_16s_analysis2:
    assay_name: "ssu16sv4v5-emp"
    taxonomy_file: "raw-v3/FAIRe_generic_example_dataset/taxaRaw_noaa-aoml-gomecc4_ssu16sv4v5-emp_20220613.xlsx"
    abundance_file: "raw-v3/FAIRe_generic_example_dataset/otuRaw_noaa-aoml-gomecc4_ssu16sv4v5-emp_20220613_16S-Amplicon_PE250.xlsx"
  # gomecc4_16s_analysis3:
  #   assay_name: "ssu16sv4v5-emp"
  #   taxonomy_file: "raw-v3/FAIRe_generic_example_dataset/taxaRaw_noaa-aoml-gomecc4_ssu16sv4v5-emp_20220831.xlsx"
  #   abundance_file: "raw-v3/FAIRe_generic_example_dataset/otu_gomecc4_ssu16sv4v5_20220831_16S-Amplicon_PE250.txt"

  # Add other analysis runs here, following the pattern:
  # your_analysis_run_name:
  #   assay_name: "your_assay_name_from_projectMetadata_column"
  #   taxonomy_file: "path/to/your/asvTaxaFeatures_your_analysis_run_name.tsv"
  #   occurrence_file: "path/to/your/table_your_analysis_run_name.tsv"


# STEP 4:
# Sample filtering configuration
# Control sample detection - specify the column to check and which values indicate control samples
control_sample_detection:
  column_name: "samp_category"  # Column name to check for control indicators
  control_values:               # List of values in that column that indicate control samples
    - "negative control"
    - "positive control"

# STEP 5:
# The pipeline will construct the Darwin Core 'locationID' based on the following priority:
# 1. It will first look for a column literally named 'locationID' in your sampleMetadata. If found, it will be used directly.
# 2. If not found, it will use the list of columns you define below to create a compound ID (e.g., columnA_columnB).
# 3. If this section is missing or empty, it will default to combining 'line_id' and 'station_id'.
locationID_components:
  - line_id
  - station_id

# -----------------------------------------------------------------------------
# Taxonomic Assignment Parameters
# -----------------------------------------------------------------------------

# STEP 6:
# Specify which API you would like to use to assign taxonomy. Options are either WoRMS or GBIF
# Taxonomic Assignment Parameters:
# taxonomic_api_source: "WoRMS"
taxonomic_api_source: "GBIF"

# Define the maximum number of matches to request from the GBIF API for each unique taxonomy string.
# A higher number may provide more potential matches for review but will SIGNIFICANTLY increase processing time.
gbif_match_limit: 3

# STEP 7:
# Define which assays should not consider 'species' rank in their taxonomic assignment.
# This is because certain assays (for example, 16S) species' level assignments are not useful / correct.
# Additionally, for example, 18S species' level assignments are good, and we want them!
# This should be the exact 'assay_name' value as found in your analysisMetadata sheets (cell D3)
# and subsequently in the 'assay_name' column of the intermediate occurrence.csv
assays_to_skip_species_match:
  - "ssu16sv4v5-emp"  # Example, replace with your actual assay names, comment out if you want species-level to be used in taxonomic assignment
  # - "another_16s_assay_name_if_any"

# Optional local reference database (WoRMS only) - speeds up matching significantly!
use_local_reference_database: false  # or false  
local_reference_database_path: "raw-v3/pr2_version_5.0.0_taxonomy.xlsx"

# Optional parameters (will use defaults if not specified)
# Number of processes for matching (0 means use all available CPUs)
worms_n_proc: 0
gbif_n_proc: 0

# Output directory (will be created if it doesn't exist)
output_dir: "processed-v3/"


# STEP 8: OPTIONAL output files
# -----------------------------------------------------------------------------
# OPTIONAL Output Files: eMoF (extended measurement or fact), and EML (Ecological Metadata Language)
# Data for these files must be manually entered in their respective input files:
# eMoF: raw-v3/eMoF Fields edna2obis .xlsx
# EML: EML_config.yaml
# -----------------------------------------------------------------------------

# Enable/disable eMoF creation. Set to true to get an eMoF, false to skip eMoF output.
emof_enabled: true
# path to the eMoF template Excel. This eMoF input file must be filled out manually. We have provided a template for you to get started.
emof_template_path: "raw-v3/eMoF_Fields_edna2obis.tsv"

# Enable/disable EML creation. Set to true to generate EML XML file, false to skip.
# EML metadata configuration is stored in a separate file (see eml_config_path below)
eml_enabled: false
eml_config_path: "EML_config.yaml"